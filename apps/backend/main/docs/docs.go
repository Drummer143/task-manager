// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/confirm-email": {
            "post": {
                "description": "Confirm email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Confirm email",
                "parameters": [
                    {
                        "description": "Confirm email object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authRouter.confirmEmailBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if token is invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error if server fails",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authRouter.loginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile data",
                        "schema": {
                            "$ref": "#/definitions/dbClient.User"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error if server fails",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Log out",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Log out",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "description": "Reset password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Reset password",
                "parameters": [
                    {
                        "description": "Reset password object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authRouter.resetPasswordBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error if server fails",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "Sign up",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign up",
                "parameters": [
                    {
                        "description": "Sign up object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authRouter.signUpBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User profile data",
                        "schema": {
                            "$ref": "#/definitions/dbClient.User"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error if server fails",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/auth/verify-reset-password-token": {
            "get": {
                "description": "Verify reset password token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Verify reset password token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error if server fails",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "This endpoint retrieves the user profile information from the Auth0 Management API using the user's ID from the session. The ID is obtained from the session and used to query the user data from the external identity provider (Auth0). The user must be authenticated, and a valid session must exist.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get current user profile",
                "responses": {
                    "200": {
                        "description": "User profile data",
                        "schema": {
                            "$ref": "#/definitions/dbClient.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "User not found in database",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error if server fails",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            },
            "patch": {
                "description": "This endpoint updates the user profile information in the Auth0 Management API using the user's ID from the session. The ID is obtained from the session and used to query the user data from the external identity provider (Auth0). The user must be authenticated, and a valid session must exist. The request body must contain valid JSON data representing the user profile information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update current user profile",
                "parameters": [
                    {
                        "description": "User profile data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profileRouter.patchProfileBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile data",
                        "schema": {
                            "$ref": "#/definitions/dbClient.User"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "User not found in Auth0 database",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error if request to Auth0 fails",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/profile/avatar": {
            "patch": {
                "description": "This endpoint uploads the user avatar image to the image storage service and updates the user profile information in the Auth0 Management API using the user's ID from the session. The ID is obtained from the session and used to query the user data from the external identity provider (Auth0). The user must be authenticated, and a valid session must exist. The request body must contain a valid image file.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Upload user avatar",
                "parameters": [
                    {
                        "type": "file",
                        "description": "User avatar image file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "X coordinate of the crop area",
                        "name": "x",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Y coordinate of the crop area",
                        "name": "y",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Width of the crop area",
                        "name": "width",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Height of the crop area",
                        "name": "height",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile data",
                        "schema": {
                            "$ref": "#/definitions/dbClient.User"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "User not found in Auth0 database",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error if request to Auth0 fails",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/profile/email": {
            "patch": {
                "description": "Update email of the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Change user email",
                "parameters": [
                    {
                        "description": "User email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profileRouter.changeEmailBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile data",
                        "schema": {
                            "$ref": "#/definitions/dbClient.User"
                        }
                    },
                    "400": {
                        "description": "Email is invalid or missing",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "User not found in database",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error if server fails",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get user list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filter by username or email",
                        "name": "username_or_email",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "If not provided or less than 1, all users will be returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Default is 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma separated list of ids to exclude",
                        "name": "exclude",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User list",
                        "schema": {
                            "$ref": "#/definitions/usersRouter.ResponseWithPagination-dbClient_User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/workspaces": {
            "get": {
                "description": "Get workspace list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get workspace list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma separated list of fields to include. Available fields: pages, owner",
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dbClient.Workspace"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspaces"
                ],
                "summary": "Create a new workspace",
                "parameters": [
                    {
                        "description": "Workspace object that needs to be created",
                        "name": "workspace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/workspacesRouter.createWorkspaceBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dbClient.Workspace"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}": {
            "get": {
                "description": "Get workspace",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma separated list of fields to include. Available fields: pages, owner",
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dbClient.Workspace"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "403": {
                        "description": "No access to workspace",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/accesses": {
            "get": {
                "description": "Get workspace accesses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace Accesses"
                ],
                "summary": "Get workspace accesses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dbClient.WorkspaceAccess"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "403": {
                        "description": "No access to workspace or workspace or no access to get workspace accesses",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Give access to a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace Accesses"
                ],
                "summary": "Give access to a workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Give access to a workspace",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/workspacesAccessesRouter.giveAccessBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "403": {
                        "description": "No access to workspace or workspace or no access to give access to workspace",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/pages": {
            "get": {
                "description": "Get page list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "Get page list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dbClient.Page"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "403": {
                        "description": "No access to workspace",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "Create a new page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Page object that needs to be created",
                        "name": "page",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pagesRouter.createPageBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dbClient.Page"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "403": {
                        "description": "No access to workspace or no access to create page",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/pages/{page_id}": {
            "get": {
                "description": "Get page by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "Get page by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma separated list of fields to include. Available fields: parentPage, childPages, owner, tasks",
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dbClient.Page"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "403": {
                        "description": "No access to page or workspace",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Update page by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "Update page by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Page object that needs to be updated",
                        "name": "page",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pagesRouter.updatePageBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dbClient.Page"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "403": {
                        "description": "No access to page or workspace or no access to update page",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete page by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "Delete page by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dbClient.Page"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "403": {
                        "description": "No access to page or workspace or no access to delete page",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/pages/{page_id}/accesses": {
            "get": {
                "description": "Get page accesses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Page Accesses"
                ],
                "summary": "Get page accesses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dbClient.PageAccess"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "403": {
                        "description": "No access to page or workspace or no access to get page accesses",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Give access to a page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Page Accesses"
                ],
                "summary": "Give access to a page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Give access to a page",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accessesRouter.giveAccessBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "403": {
                        "description": "No access to page or workspace or no access to give access to page",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/pages/{page_id}/tasks": {
            "get": {
                "description": "Get a list of tasks created by user with the given ID. If no ID is provided, the ID of the currently logged in user is used",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a list of tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user who created the tasks",
                        "name": "owner_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tasksRouter.groupedByStatusTasks"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task",
                "parameters": [
                    {
                        "description": "Task object that needs to be created",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tasksRouter.createTaskBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dbClient.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/pages/{page_id}/tasks/{task_id}": {
            "get": {
                "description": "Get a task",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dbClient.Task"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Update a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task object that needs to be updated",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tasksRouter.updateTaskBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dbClient.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a task",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dbClient.Task"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/pages/{page_id}/tasks/{task_id}/status": {
            "patch": {
                "description": "Change task status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Change task status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task status. Must be one of: not_done, in_progress, done",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tasksRouter.changeTaskStatusBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dbClient.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if session is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorHandlers.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "accessesRouter.giveAccessBody": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "role": {
                    "enum": [
                        "owner",
                        "admin",
                        "member",
                        "commentator",
                        "guest"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/dbClient.UserRole"
                        }
                    ]
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "authRouter.confirmEmailBody": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "authRouter.loginBody": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "authRouter.resetPasswordBody": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "authRouter.signUpBody": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 5
                },
                "password": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dbClient.Page": {
            "type": "object",
            "properties": {
                "childPages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dbClient.Page"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/dbClient.User"
                },
                "parentPage": {
                    "$ref": "#/definitions/dbClient.Page"
                },
                "role": {
                    "$ref": "#/definitions/dbClient.UserRole"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dbClient.Task"
                    }
                },
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/dbClient.PageType"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dbClient.PageAccess": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/dbClient.UserRole"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dbClient.User"
                }
            }
        },
        "dbClient.PageType": {
            "type": "string",
            "enum": [
                "board",
                "text",
                "group"
            ],
            "x-enum-varnames": [
                "PageTypeBoard",
                "PageTypeText",
                "PageTypeGroup"
            ]
        },
        "dbClient.Task": {
            "type": "object",
            "properties": {
                "assignee": {
                    "$ref": "#/definitions/dbClient.User"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dueDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "page": {
                    "$ref": "#/definitions/dbClient.Page"
                },
                "reporter": {
                    "$ref": "#/definitions/dbClient.User"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dbClient.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "emailVerified": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "lastLogin": {
                    "type": "string"
                },
                "lastPasswordReset": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dbClient.UserRole": {
            "type": "string",
            "enum": [
                "owner",
                "admin",
                "member",
                "commentator",
                "guest"
            ],
            "x-enum-varnames": [
                "UserRoleOwner",
                "UserRoleAdmin",
                "UserRoleMember",
                "UserRoleCommentator",
                "UserRoleGuest"
            ]
        },
        "dbClient.Workspace": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/dbClient.User"
                },
                "pages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dbClient.Page"
                    }
                },
                "role": {
                    "$ref": "#/definitions/dbClient.UserRole"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dbClient.WorkspaceAccess": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/dbClient.UserRole"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dbClient.User"
                }
            }
        },
        "errorHandlers.Error": {
            "type": "object",
            "properties": {
                "details": {},
                "error": {
                    "type": "string"
                },
                "errorCode": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        },
        "pagesRouter.createPageBody": {
            "type": "object",
            "required": [
                "title",
                "type"
            ],
            "properties": {
                "parentId": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "text",
                        "board",
                        "group"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/dbClient.PageType"
                        }
                    ]
                }
            }
        },
        "pagesRouter.updatePageBody": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "profileRouter.changeEmailBody": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "profileRouter.patchProfileBody": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string"
                }
            }
        },
        "tasksRouter.changeTaskStatusBody": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "not_done",
                        "in_progress",
                        "done"
                    ]
                }
            }
        },
        "tasksRouter.createTaskBody": {
            "type": "object",
            "required": [
                "status",
                "title"
            ],
            "properties": {
                "assigneeID": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "dueDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 63
                }
            }
        },
        "tasksRouter.groupedByStatusTasks": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/dbClient.Task"
                }
            }
        },
        "tasksRouter.updateTaskBody": {
            "type": "object",
            "properties": {
                "assigneeId": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "dueDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "not_done",
                        "in_progress",
                        "done"
                    ]
                },
                "title": {
                    "type": "string",
                    "maxLength": 63
                }
            }
        },
        "usersRouter.Meta": {
            "type": "object",
            "properties": {
                "hasMore": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "usersRouter.ResponseWithPagination-dbClient_User": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dbClient.User"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/usersRouter.Meta"
                }
            }
        },
        "workspacesAccessesRouter.giveAccessBody": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "role": {
                    "enum": [
                        "owner",
                        "admin",
                        "member",
                        "commentator",
                        "guest"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/dbClient.UserRole"
                        }
                    ]
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "workspacesRouter.createWorkspaceBody": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
